
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COMMA DIV ELSE EQ FALSE GE GT ID IF LBRACE LE LPAREN LT MINUS MOD NE NEG NUMBER OR PLUS RBRACE RPAREN SEMI TIMES TRUErecurrence : initialization ifinitialization : assignmentsassignments : assignment assignmentsassignments : assignment : lhs ASSIGN expression SEMIexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIV factorterm : term MOD factorterm : factorfactor : NUMBERfactor : ID LPAREN expression_list RPARENfactor : IDfactor : MINUS factorfactor : LPAREN expression RPARENif : IF LPAREN condition RPAREN LBRACE assignments RBRACEif : IF LPAREN condition RPAREN LBRACE assignments RBRACE elseelse : ELSE LBRACE assignments RBRACEelse : ELSE ifcondition_atom : expression GT expressioncondition_atom : expression GE expressioncondition_atom : expression LT expressioncondition_atom : expression LE expressioncondition_atom : expression EQ expressioncondition_atom : expression NE expressioncondition_atom : TRUEcondition_atom : FALSEcondition_term : condition_atomcondition_term : LPAREN condition RPARENcondition_list : condition COMMA condition_listcondition_list : conditioncondition : condition_termcondition : AND LPAREN condition_list RPARENcondition : OR LPAREN condition_list RPARENcondition : NEG LPAREN condition_list RPARENlhs : ID LPAREN expression_list RPARENexpression_list : expressionexpression_list : expression COMMA expression_list'
    
_lr_action_items = {'IF':([0,2,3,4,9,32,84,],[-4,8,-2,-4,-3,-5,8,]),'ID':([0,4,10,11,12,15,19,22,32,33,34,35,36,37,39,42,46,47,48,49,50,51,52,53,54,64,78,85,],[6,6,18,18,18,18,18,18,-5,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,6,18,6,]),'$end':([1,7,81,83,86,88,],[0,-1,-18,-19,-21,-20,]),'RBRACE':([4,9,32,64,76,85,87,],[-4,-3,-5,-4,81,-4,88,]),'ASSIGN':([5,41,],[10,-38,]),'LPAREN':([6,8,10,11,12,15,18,19,22,25,26,27,33,34,35,36,37,39,42,46,47,48,49,50,51,52,53,54,78,],[11,12,19,19,22,19,39,19,22,46,47,48,19,19,19,19,19,19,19,22,22,22,19,19,19,19,19,19,22,]),'NUMBER':([10,11,12,15,19,22,33,34,35,36,37,39,42,46,47,48,49,50,51,52,53,54,78,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'MINUS':([10,11,12,13,14,15,16,17,18,19,21,22,29,33,34,35,36,37,38,39,40,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,69,70,71,72,73,74,75,78,],[15,15,15,34,-8,15,-12,-13,-15,15,34,15,34,15,15,15,15,15,-16,15,34,15,34,15,15,15,15,15,15,15,15,15,-6,-7,-9,-10,-11,-17,34,34,34,34,34,34,-14,15,]),'AND':([12,22,46,47,48,78,],[25,25,25,25,25,25,]),'OR':([12,22,46,47,48,78,],[26,26,26,26,26,26,]),'NEG':([12,22,46,47,48,78,],[27,27,27,27,27,27,]),'TRUE':([12,22,46,47,48,78,],[30,30,30,30,30,30,]),'FALSE':([12,22,46,47,48,78,],[31,31,31,31,31,31,]),'SEMI':([13,14,16,17,18,38,55,56,57,58,59,61,75,],[32,-8,-12,-13,-15,-16,-6,-7,-9,-10,-11,-17,-14,]),'PLUS':([13,14,16,17,18,21,29,38,40,44,55,56,57,58,59,61,69,70,71,72,73,74,75,],[33,-8,-12,-13,-15,33,33,-16,33,33,-6,-7,-9,-10,-11,-17,33,33,33,33,33,33,-14,]),'COMMA':([14,16,17,18,21,24,28,30,31,38,55,56,57,58,59,61,63,66,69,70,71,72,73,74,75,77,79,80,],[-8,-12,-13,-15,42,-34,-30,-28,-29,-16,-6,-7,-9,-10,-11,-17,-31,78,-22,-23,-24,-25,-26,-27,-14,-35,-36,-37,]),'RPAREN':([14,16,17,18,20,21,23,24,28,30,31,38,40,43,44,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,82,],[-8,-12,-13,-15,41,-39,45,-34,-30,-28,-29,-16,61,63,61,-6,-7,-9,-10,-11,75,-17,-40,-31,77,-33,79,80,-22,-23,-24,-25,-26,-27,-14,-35,-36,-37,-32,]),'GT':([14,16,17,18,29,38,44,55,56,57,58,59,61,75,],[-8,-12,-13,-15,49,-16,49,-6,-7,-9,-10,-11,-17,-14,]),'GE':([14,16,17,18,29,38,44,55,56,57,58,59,61,75,],[-8,-12,-13,-15,50,-16,50,-6,-7,-9,-10,-11,-17,-14,]),'LT':([14,16,17,18,29,38,44,55,56,57,58,59,61,75,],[-8,-12,-13,-15,51,-16,51,-6,-7,-9,-10,-11,-17,-14,]),'LE':([14,16,17,18,29,38,44,55,56,57,58,59,61,75,],[-8,-12,-13,-15,52,-16,52,-6,-7,-9,-10,-11,-17,-14,]),'EQ':([14,16,17,18,29,38,44,55,56,57,58,59,61,75,],[-8,-12,-13,-15,53,-16,53,-6,-7,-9,-10,-11,-17,-14,]),'NE':([14,16,17,18,29,38,44,55,56,57,58,59,61,75,],[-8,-12,-13,-15,54,-16,54,-6,-7,-9,-10,-11,-17,-14,]),'TIMES':([14,16,17,18,38,55,56,57,58,59,61,75,],[35,-12,-13,-15,-16,35,35,-9,-10,-11,-17,-14,]),'DIV':([14,16,17,18,38,55,56,57,58,59,61,75,],[36,-12,-13,-15,-16,36,36,-9,-10,-11,-17,-14,]),'MOD':([14,16,17,18,38,55,56,57,58,59,61,75,],[37,-12,-13,-15,-16,37,37,-9,-10,-11,-17,-14,]),'LBRACE':([45,84,],[64,85,]),'ELSE':([81,],[84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'recurrence':([0,],[1,]),'initialization':([0,],[2,]),'assignments':([0,4,64,85,],[3,9,76,87,]),'assignment':([0,4,64,85,],[4,4,4,4,]),'lhs':([0,4,64,85,],[5,5,5,5,]),'if':([2,84,],[7,86,]),'expression':([10,11,12,19,22,39,42,46,47,48,49,50,51,52,53,54,78,],[13,21,29,40,44,21,21,29,29,29,69,70,71,72,73,74,29,]),'term':([10,11,12,19,22,33,34,39,42,46,47,48,49,50,51,52,53,54,78,],[14,14,14,14,14,55,56,14,14,14,14,14,14,14,14,14,14,14,14,]),'factor':([10,11,12,15,19,22,33,34,35,36,37,39,42,46,47,48,49,50,51,52,53,54,78,],[16,16,16,38,16,16,16,16,57,58,59,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression_list':([11,39,42,],[20,60,62,]),'condition':([12,22,46,47,48,78,],[23,43,66,66,66,66,]),'condition_term':([12,22,46,47,48,78,],[24,24,24,24,24,24,]),'condition_atom':([12,22,46,47,48,78,],[28,28,28,28,28,28,]),'condition_list':([46,47,48,78,],[65,67,68,82,]),'else':([81,],[83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> recurrence","S'",1,None,None,None),
  ('recurrence -> initialization if','recurrence',2,'p_recurrence','parser.py',7),
  ('initialization -> assignments','initialization',1,'p_initialization','parser.py',15),
  ('assignments -> assignment assignments','assignments',2,'p_assignments_1','parser.py',19),
  ('assignments -> <empty>','assignments',0,'p_assignments_2','parser.py',23),
  ('assignment -> lhs ASSIGN expression SEMI','assignment',4,'p_assignment','parser.py',27),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',31),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser.py',35),
  ('expression -> term','expression',1,'p_expression_term','parser.py',39),
  ('term -> term TIMES factor','term',3,'p_term_times','parser.py',43),
  ('term -> term DIV factor','term',3,'p_term_div','parser.py',47),
  ('term -> term MOD factor','term',3,'p_term_mod','parser.py',51),
  ('term -> factor','term',1,'p_term_factor','parser.py',55),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',59),
  ('factor -> ID LPAREN expression_list RPAREN','factor',4,'p_factor_app','parser.py',63),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',69),
  ('factor -> MINUS factor','factor',2,'p_factor_negative','parser.py',74),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_paren','parser.py',78),
  ('if -> IF LPAREN condition RPAREN LBRACE assignments RBRACE','if',7,'p_if_1','parser.py',82),
  ('if -> IF LPAREN condition RPAREN LBRACE assignments RBRACE else','if',8,'p_if_2','parser.py',88),
  ('else -> ELSE LBRACE assignments RBRACE','else',4,'p_else_1','parser.py',94),
  ('else -> ELSE if','else',2,'p_else_2','parser.py',98),
  ('condition_atom -> expression GT expression','condition_atom',3,'p_condition_atom_GT','parser.py',102),
  ('condition_atom -> expression GE expression','condition_atom',3,'p_condition_atom_GE','parser.py',106),
  ('condition_atom -> expression LT expression','condition_atom',3,'p_condition_atom_LT','parser.py',110),
  ('condition_atom -> expression LE expression','condition_atom',3,'p_condition_atom_LE','parser.py',114),
  ('condition_atom -> expression EQ expression','condition_atom',3,'p_condition_atom_EQ','parser.py',118),
  ('condition_atom -> expression NE expression','condition_atom',3,'p_condition_atom_NE','parser.py',122),
  ('condition_atom -> TRUE','condition_atom',1,'p_condition_atom_TRUE','parser.py',126),
  ('condition_atom -> FALSE','condition_atom',1,'p_condition_atom_FALSE','parser.py',130),
  ('condition_term -> condition_atom','condition_term',1,'p_condition_term_atom','parser.py',134),
  ('condition_term -> LPAREN condition RPAREN','condition_term',3,'p_condition_term_paren','parser.py',138),
  ('condition_list -> condition COMMA condition_list','condition_list',3,'p_condition_list_1','parser.py',142),
  ('condition_list -> condition','condition_list',1,'p_condition_list_2','parser.py',146),
  ('condition -> condition_term','condition',1,'p_condition_single','parser.py',150),
  ('condition -> AND LPAREN condition_list RPAREN','condition',4,'p_condition_and','parser.py',154),
  ('condition -> OR LPAREN condition_list RPAREN','condition',4,'p_condition_or','parser.py',158),
  ('condition -> NEG LPAREN condition_list RPAREN','condition',4,'p_condition_neg','parser.py',162),
  ('lhs -> ID LPAREN expression_list RPAREN','lhs',4,'p_lhs','parser.py',207),
  ('expression_list -> expression','expression_list',1,'p_expression_list_1','parser.py',213),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list_2','parser.py',217),
]
